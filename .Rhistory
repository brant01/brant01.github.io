for (i in 1:nrow(events)) {
events$time_diff[i] <- ifelse(i == 1,
0,
(events$Timestamps[i] - events$Timestamps[i-1])/1000000)
}
events <- events %>%
select(Timestamps, time_diff, Event_ID:Extra_8)
head(events)
head(event_strings)
event_strings <- read_excel("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/EventStrings.xls",
sheet = "Sheet1",
range = "A1:A7206",
col_names = FALSE) %>%
rename(Eveent_Strings = X__1)
head(event_strings)
events <- bind_cols(timestamps, event_strings, eventID, TTL, extras)
head(events)
for (i in 1:nrow(events)) {
events$time_diff[i] <- ifelse(i == 1,
0,
(events$Timestamps[i] - events$Timestamps[i-1])/1000000)
}
events <- events %>%
select(Timestamps, time_diff, Event_Strings:Extra_8)
eventID <- read_csv("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/EventIDs.csv",
col_names = FALSE) %>%
t() %>%
as.data.frame() %>%
rename(Event_ID = V1)
extras <- read_csv("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/Extras.csv",
col_names = FALSE) %>%
t() %>%
as.data.frame() %>%
rename(Extra_1 = V1,
Extra_2 = V2,
Extra_3 = V3,
Extra_4 = V4,
Extra_5 = V5,
Extra_6 = V6,
Extra_7 = V7,
Extra_8 = V8)
timestamps <- read_csv("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/Timestamps.csv",
col_names = FALSE) %>%
t() %>%
as.data.frame() %>%
rename(Timestamps = V1)
TTL <- read_csv("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/TTLs.csv",
col_names = FALSE) %>%
t() %>%
as.data.frame() %>%
rename(TTL = V1)
event_strings <- read_excel("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/EventStrings.xls",
sheet = "Sheet1",
range = "A1:A7206",
col_names = FALSE) %>%
rename(Event_Strings = X__1)
events <- bind_cols(timestamps, event_strings, eventID, TTL, extras)
for (i in 1:nrow(events)) {
events$time_diff[i] <- ifelse(i == 1,
0,
(events$Timestamps[i] - events$Timestamps[i-1])/1000000)
}
events <- events %>%
select(Timestamps, time_diff, Event_Strings:Extra_8)
head(events)
table(events$time_diff)
events %>% ggplot(aes(x = nrow(events), y = time_diff)) + geom_bar()
events %>% ggplot(aes(x = nrow(events), y = time_diff)) + geom_point()
events %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point()
events %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point(aes(fill = Event_ID))
events %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point(aes(color = Event_ID))
events %>% filter(Event_ID != 0)
events %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point(aes(color = TTL))
hist(events$time_diff)
events %>% filter(time_diff < 5) %>% hist()
events %>% filter(time_diff < 5) %>% hist(.)
?write_csv
write_csv(events,
"C:/Chris_Sample_Data/2017-10-05_11-26-41/Events/event_all.csv")
table(events$time_diff)
events %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point(aes(color = Event_ID))
events %>% filter(time_diff < 4) %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point(aes(color = Event_ID))
table(events$Event_Strings)
events %>% filter(time_diff < 4) %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point())
events %>% filter(time_diff < 4) %>% ggplot(aes(x = Timestamps, y = time_diff)) + geom_point()
install.packages("reticulate")
sys.which("python")
Sys.which("python")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
print(sessionInfo())
install.packages(c("bindrcpp", "data.table", "dplyr", "Formula", "ggrepel", "ggsci", "htmlTable", "htmlwidgets", "labelled", "lme4", "lmerTest", "mvtnorm", "pillar", "psych", "purrr", "Rcpp", "redcapAPI", "rlang", "stringi", "stringr", "survival", "tableone", "tidyr", "utf8", "yaml"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(engine.path = list(python = '/anaconda/bin/python'))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
#knitr::opts_chunk$set(engine.path = list(python = '/anaconda/bin/python'))
conda_list()
conda_list()
conda_create("r-reticulate")
knitr::opts_chunk$set(engine.path = list(python = '/anaconda/bin/python'))
Sys.which(python)
Sys.which("python")
use_condaenv("r-reticulate")
conda_lise()
conda_list()
knitr::opts_chunk$set(engine.path = list(python = "C:\\ProgramData\\Anaconda3\\python.exe"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("r-reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(engine.path = list(python = "C:\\ProgramData\\Anaconda3\\python.exe"))
knitr::opts_chunk$set(engine.path = list(python = "C:\Users\brantja\AppData\Local\conda\conda\envs\r-reticulate\python.exe"))
knitr::opts_chunk$set(engine.path = list(python = "C:/Users/brantja/AppData/Local/conda/conda/envs/r-reticulate/python.exe"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("r-reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(engine.path = list(python = "C:/Users/brantja/AppData/Local/conda/conda/envs/r-reticulate/python.exe"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("r-reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(engine.path = list(python = "C:/Users/brantja/AppData/Local/conda/conda/envs/r-reticulate/python.exe"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("r-reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
#knitr::opts_chunk$set(engine.path = list(python = "C:/Users/brantja/AppData/Local/conda/conda/envs/r-reticulate/python.exe"))
conda_binary()
conda_lise
conda_list()
use_condaenv("rstudio")
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("rstudio")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
#knitr::opts_chunk$set(engine.path = list(python = "C:/Users/brantja/AppData/Local/conda/conda/envs/r-reticulate/python.exe"))
library("ggplot2")
library("dplyr")
library("tidyr")
library("knitr")
library("tableone")
library("forcats")
library("survival")
library("npsurv")
library("broom")
library("tibble")
library("readr")
library("readxl")
library("reticulate")
use_condaenv("r-reticulate")
knitr::opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
source_python("C:/Chris_Sample_Data/R/nsc_import.py",
convert = TRUE)
events <- loadNev("C:/Chris_Sample_Data/2017-10-05_11-26-41/Events.nev")
num_row <- length(unlist(events[1]))
event_df <- NULL
event_df <- data.frame(matrix(unlist(events), nrow=num_row)) %>%
rename(TimeStamp = X1,
EventID = X2,
Nttl = X3,
EventString = X4) %>%
mutate(Event = TRUE) %>%
mutate(TimeStamp = as.numeric(as.character(TimeStamp))) %>%
select(TimeStamp, Event)
rm(events)
for (i in 1:nrow(event_df)) {
event_df$time_diff[i] <- ifelse(i == 1,
0,
(event_df$TimeStamp[i] - event_df$TimeStamp[i-1])/1000000)
}
source_python("C:/Chris_Sample_Data/R/nsc_import.py",
convert = TRUE)
#Channel 1
ch_1 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC1B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_1[1]))
ch_1_df <- NULL
ch_1_df <- data.frame(matrix(unlist(ch_1), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_1 = X1) %>%
select(TimeStamp, Ch_1)
rm(ch_1)
#Channel 2
ch_2 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC2B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_2[1]))
ch_2_df <- NULL
ch_2_df <- data.frame(matrix(unlist(ch_2), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_2 = X1)
rm(ch_2)
ch_all <- bind_cols(ch_1_df, ch_2_df)
rm(ch_1_df, ch_2_df)
#Channel 3
ch_3 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC3B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_3[1]))
ch_3_df <- NULL
ch_3_df <- data.frame(matrix(unlist(ch_3), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_3 = X1)
rm(ch_3)
ch_all <- bind_cols(ch_all, ch_3_df)
rm(ch_3_df)
#Channel 4
ch_4 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC4B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_4[1]))
ch_4_df <- NULL
ch_4_df <- data.frame(matrix(unlist(ch_4), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_4 = X1)
rm(ch_4)
ch_all <- bind_cols(ch_all, ch_4_df)
rm(ch_4_df)
#Channel 5
ch_5 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC5B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_5[1]))
ch_5_df <- NULL
ch_5_df <- data.frame(matrix(unlist(ch_5), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_5 = X1)
rm(ch_5)
ch_all <- bind_cols(ch_all, ch_5_df)
rm(ch_5_df)
#Channel 6
ch_6 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC6B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_6[1]))
ch_6_df <- NULL
ch_6_df <- data.frame(matrix(unlist(ch_6), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_6 = X1)
rm(ch_6)
ch_all <- bind_cols(ch_all, ch_6_df)
rm(ch_6_df)
#Channel 7
ch_7 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC3B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_7[1]))
ch_7_df <- NULL
ch_7_df <- data.frame(matrix(unlist(ch_7), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_7 = X1)
rm(ch_7)
ch_all <- bind_cols(ch_all, ch_7_df)
rm(ch_7_df)
#Channel 8
ch_8 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC8B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_8[1]))
ch_8_df <- NULL
ch_8_df <- data.frame(matrix(unlist(ch_8), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_8 = X1)
rm(ch_8)
ch_all <- bind_cols(ch_all, ch_8_df)
rm(ch_8_df)
#Channel 9
ch_9 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC9B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_9[1]))
ch_9_df <- NULL
ch_9_df <- data.frame(matrix(unlist(ch_9), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_9 = X1)
rm(ch_9)
ch_all <- bind_cols(ch_all, ch_9_df)
rm(ch_9_df)
#Channel 10
ch_10 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC10B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_10[1]))
ch_10_df <- NULL
ch_10_df <- data.frame(matrix(unlist(ch_10), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_10 = X1)
rm(ch_10)
ch_all <- bind_cols(ch_all, ch_10_df)
rm(ch_10_df)
#Channel 11
ch_11 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC11B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_11[1]))
ch_11_df <- NULL
ch_11_df <- data.frame(matrix(unlist(ch_11), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_11 = X1)
rm(ch_11)
ch_all <- bind_cols(ch_all, ch_11_df)
rm(ch_11_df)
#Channel 12
ch_12 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC12B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_12[1]))
ch_12_df <- NULL
ch_12_df <- data.frame(matrix(unlist(ch_12), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_12 = X1)
rm(ch_12)
ch_all <- bind_cols(ch_all, ch_12_df)
rm(ch_12_df)
#Channel 13
ch_13 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC13B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_13[1]))
ch_13_df <- NULL
ch_13_df <- data.frame(matrix(unlist(ch_13), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_13 = X1)
rm(ch_13)
ch_all <- bind_cols(ch_all, ch_13_df)
rm(ch_13_df)
#Channel 14
ch_14 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC14B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_14[1]))
ch_14_df <- NULL
ch_14_df <- data.frame(matrix(unlist(ch_14), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_14 = X1)
rm(ch_14)
ch_all <- bind_cols(ch_all, ch_14_df)
rm(ch_14_df)
#Channel 15
ch_15 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC15B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_15[1]))
ch_15_df <- NULL
ch_15_df <- data.frame(matrix(unlist(ch_15), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_15 = X1)
rm(ch_15)
ch_all <- bind_cols(ch_all, ch_15_df)
rm(ch_15_df)
#Channel 16
ch_16 <- loadNcs("C:/Chris_Sample_Data/2017-10-05_11-26-41/CSC16B.ncs",
should_d2a = FALSE)
num_row <- length(unlist(ch_16[1]))
ch_16_df <- NULL
ch_16_df <- data.frame(matrix(unlist(ch_16), nrow=num_row)) %>%
rename(TimeStamp = X2,
Ch_16 = X1)
rm(ch_16)
ch_all <- bind_cols(ch_all, ch_16_df)
rm(ch_16_df)
#Check if all timestamps are equal (This code was true for all)
#TS_Check <- ch_all %>%
#  select(TimeStamp, TimeStamp1, TimeStamp2, TimeStamp3, TimeStamp4, TimeStamp5,
#         TimeStamp6, TimeStamp7, TimeStamp8, TimeStamp9, TimeStamp10, TimeStamp11,
#         TimeStamp12, TimeStamp13, TimeStamp14, TimeStamp15)
#sapply(2:ncol(TS_Check),function(x) isTRUE(all.equal(TS_Check[,x-1],TS_Check[,x])))
ch_all <- ch_all %>%
select(TimeStamp, Ch_1, Ch_2, Ch_3, Ch_4, Ch_5,
Ch_6, Ch_7, Ch_8, Ch_9, Ch_10, Ch_11,
Ch_12, Ch_13, Ch_14, Ch_15, Ch_16)
write_csv(event_df,
"C:/Chris_Sample_Data/R/R_and_Python/events.csv")
write_csv(ch_all,
"C:/Chris_Sample_Data/R/R_and_Python/ch_all_no_e.csv")
install.packages("tseriesChaos")
TS <- ch_all %>%
select(TimeStamp)
ts_event <- full_join(TS, event_df, by = "TimeStamp")
head(ts_event)
table(ts_event$time_diff)
ch_all_e <- bind_cols(ch_all, ts_event)
ch_all_e <- left_join(ts_eent, ch_all, by = "TimesStamp")
ch_all_e <- left_join(ts_event, ch_all, by = "TimesStamp")
ch_all_e <- left_join(ts_event, ch_all, by = "TimeStamp")
head(ch_all_e)
table(ch_all_e$time_diff)
table(ch_all_e$Event)
table(event_df$Event)
write_csv(ch_all_e,
"C:/Chris_Sample_Data/R/R_and_Python/ch_all_w_e.csv")
library("rmarkdown")
setwd("I:/Brant/Research/Website")
rmarkdown::render_site()
library("rmarkdown")
setwd("I:/Brant/Research/Website")
rmarkdown::render_site()
library("rmarkdown")
setwd("I:/Brant/Research/Website")
rmarkdown::render_site()
library("rmarkdown")
setwd("I:/Brant/Research/Website")
rmarkdown::render_site()
library("rmarkdown")
setwd("I:/Brant/Research/Website")
rmarkdown::render_site()
